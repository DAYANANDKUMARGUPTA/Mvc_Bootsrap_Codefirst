@model Mvc_Bootsrap_Codefirst.Models.tbluser

@{
    ViewBag.Title = "Adduser";
}

<h2>Adduser</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>tbluser</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(x => x.uid)
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.country, new SelectList(ViewBag.ctr, "cid", "cname"), "--Select--", new { @class = "form-control", onchange = "BindState()" })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.state, new SelectList(ViewBag.stt, "sid", "sname"), "--Select--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@ViewBag.BT" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script type="text/javascript">
    function BindState()
    {
        if ($("#uid").val() > 0) {
            $.ajax({
                url: '../Stateget',
                type: 'post',
                data: { A: $("#country").val() },
                success: function (data) {
                    $("#state").empty();
                    $("#state").append($('<option></option>').html("--Select--").val(0));
                    for (var i = 0; i < data.length; i++) {
                        $("#state").append($('<option></option>').html(data[i].sname).val(data[i].sid));
                    }

                },
                error: function () {
                    alert('state not bind !!');
                }

            });
        }
        else {
            $.ajax({
                url: '../User/Stateget',
                type: 'post',
                data: { A: $("#country").val() },
                success: function (data) {
                    $("#state").empty();
                    $("#state").append($('<option></option>').html("--Select--").val(0));
                    for (var i = 0; i < data.length; i++) {
                        $("#state").append($('<option></option>').html(data[i].sname).val(data[i].sid));
                    }

                },
                error: function () {
                    alert('state not bind !!');
                }

            });
        }
    }

</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
